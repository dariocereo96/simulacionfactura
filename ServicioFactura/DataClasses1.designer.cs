#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServicioFactura
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="facturas")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertDetalleFactura(DetalleFactura instance);
    partial void UpdateDetalleFactura(DetalleFactura instance);
    partial void DeleteDetalleFactura(DetalleFactura instance);
    partial void InsertFacturas(Facturas instance);
    partial void UpdateFacturas(Facturas instance);
    partial void DeleteFacturas(Facturas instance);
    partial void InsertProductos(Productos instance);
    partial void UpdateProductos(Productos instance);
    partial void DeleteProductos(Productos instance);
    partial void InsertUsuarios(Usuarios instance);
    partial void UpdateUsuarios(Usuarios instance);
    partial void DeleteUsuarios(Usuarios instance);
    partial void InsertClientes(Clientes instance);
    partial void UpdateClientes(Clientes instance);
    partial void DeleteClientes(Clientes instance);
    #endregion
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DetalleFactura> DetalleFactura
		{
			get
			{
				return this.GetTable<DetalleFactura>();
			}
		}
		
		public System.Data.Linq.Table<Facturas> Facturas
		{
			get
			{
				return this.GetTable<Facturas>();
			}
		}
		
		public System.Data.Linq.Table<Productos> Productos
		{
			get
			{
				return this.GetTable<Productos>();
			}
		}
		
		public System.Data.Linq.Table<Usuarios> Usuarios
		{
			get
			{
				return this.GetTable<Usuarios>();
			}
		}
		
		public System.Data.Linq.Table<Clientes> Clientes
		{
			get
			{
				return this.GetTable<Clientes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DetalleFactura")]
	public partial class DetalleFactura : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DetalleID;
		
		private System.Nullable<int> _FacturaID;
		
		private System.Nullable<int> _ProductoID;
		
		private int _Cantidad;
		
		private decimal _PrecioUnitario;
		
		private decimal _Subtotal;
		
		private EntityRef<Facturas> _Facturas;
		
		private EntityRef<Productos> _Productos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetalleIDChanging(int value);
    partial void OnDetalleIDChanged();
    partial void OnFacturaIDChanging(System.Nullable<int> value);
    partial void OnFacturaIDChanged();
    partial void OnProductoIDChanging(System.Nullable<int> value);
    partial void OnProductoIDChanged();
    partial void OnCantidadChanging(int value);
    partial void OnCantidadChanged();
    partial void OnPrecioUnitarioChanging(decimal value);
    partial void OnPrecioUnitarioChanged();
    partial void OnSubtotalChanging(decimal value);
    partial void OnSubtotalChanged();
    #endregion
		
		public DetalleFactura()
		{
			this._Facturas = default(EntityRef<Facturas>);
			this._Productos = default(EntityRef<Productos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetalleID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DetalleID
		{
			get
			{
				return this._DetalleID;
			}
			set
			{
				if ((this._DetalleID != value))
				{
					this.OnDetalleIDChanging(value);
					this.SendPropertyChanging();
					this._DetalleID = value;
					this.SendPropertyChanged("DetalleID");
					this.OnDetalleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacturaID", DbType="Int")]
		public System.Nullable<int> FacturaID
		{
			get
			{
				return this._FacturaID;
			}
			set
			{
				if ((this._FacturaID != value))
				{
					if (this._Facturas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFacturaIDChanging(value);
					this.SendPropertyChanging();
					this._FacturaID = value;
					this.SendPropertyChanged("FacturaID");
					this.OnFacturaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoID", DbType="Int")]
		public System.Nullable<int> ProductoID
		{
			get
			{
				return this._ProductoID;
			}
			set
			{
				if ((this._ProductoID != value))
				{
					if (this._Productos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductoIDChanging(value);
					this.SendPropertyChanging();
					this._ProductoID = value;
					this.SendPropertyChanged("ProductoID");
					this.OnProductoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cantidad", DbType="Int NOT NULL")]
		public int Cantidad
		{
			get
			{
				return this._Cantidad;
			}
			set
			{
				if ((this._Cantidad != value))
				{
					this.OnCantidadChanging(value);
					this.SendPropertyChanging();
					this._Cantidad = value;
					this.SendPropertyChanged("Cantidad");
					this.OnCantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrecioUnitario", DbType="Decimal(18,2) NOT NULL")]
		public decimal PrecioUnitario
		{
			get
			{
				return this._PrecioUnitario;
			}
			set
			{
				if ((this._PrecioUnitario != value))
				{
					this.OnPrecioUnitarioChanging(value);
					this.SendPropertyChanging();
					this._PrecioUnitario = value;
					this.SendPropertyChanged("PrecioUnitario");
					this.OnPrecioUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(18,2) NOT NULL")]
		public decimal Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facturas_DetalleFactura", Storage="_Facturas", ThisKey="FacturaID", OtherKey="FacturaID", IsForeignKey=true)]
		public Facturas Facturas
		{
			get
			{
				return this._Facturas.Entity;
			}
			set
			{
				Facturas previousValue = this._Facturas.Entity;
				if (((previousValue != value) 
							|| (this._Facturas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Facturas.Entity = null;
						previousValue.DetalleFactura.Remove(this);
					}
					this._Facturas.Entity = value;
					if ((value != null))
					{
						value.DetalleFactura.Add(this);
						this._FacturaID = value.FacturaID;
					}
					else
					{
						this._FacturaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Facturas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_DetalleFactura", Storage="_Productos", ThisKey="ProductoID", OtherKey="ProductoID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Productos Productos
		{
			get
			{
				return this._Productos.Entity;
			}
			set
			{
				Productos previousValue = this._Productos.Entity;
				if (((previousValue != value) 
							|| (this._Productos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Productos.Entity = null;
						previousValue.DetalleFactura.Remove(this);
					}
					this._Productos.Entity = value;
					if ((value != null))
					{
						value.DetalleFactura.Add(this);
						this._ProductoID = value.ProductoID;
					}
					else
					{
						this._ProductoID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Productos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Facturas")]
	public partial class Facturas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FacturaID;
		
		private System.Nullable<int> _ClienteID;
		
		private System.Nullable<int> _UsuarioID;
		
		private System.DateTime _Fecha;
		
		private decimal _Subtotal;
		
		private decimal _IVA;
		
		private decimal _TotalConIVA;
		
		private EntitySet<DetalleFactura> _DetalleFactura;
		
		private EntityRef<Usuarios> _Usuarios;
		
		private EntityRef<Clientes> _Clientes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFacturaIDChanging(int value);
    partial void OnFacturaIDChanged();
    partial void OnClienteIDChanging(System.Nullable<int> value);
    partial void OnClienteIDChanged();
    partial void OnUsuarioIDChanging(System.Nullable<int> value);
    partial void OnUsuarioIDChanged();
    partial void OnFechaChanging(System.DateTime value);
    partial void OnFechaChanged();
    partial void OnSubtotalChanging(decimal value);
    partial void OnSubtotalChanged();
    partial void OnIVAChanging(decimal value);
    partial void OnIVAChanged();
    partial void OnTotalConIVAChanging(decimal value);
    partial void OnTotalConIVAChanged();
    #endregion
		
		public Facturas()
		{
			this._DetalleFactura = new EntitySet<DetalleFactura>(new Action<DetalleFactura>(this.attach_DetalleFactura), new Action<DetalleFactura>(this.detach_DetalleFactura));
			this._Usuarios = default(EntityRef<Usuarios>);
			this._Clientes = default(EntityRef<Clientes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FacturaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FacturaID
		{
			get
			{
				return this._FacturaID;
			}
			set
			{
				if ((this._FacturaID != value))
				{
					this.OnFacturaIDChanging(value);
					this.SendPropertyChanging();
					this._FacturaID = value;
					this.SendPropertyChanged("FacturaID");
					this.OnFacturaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteID", DbType="Int")]
		public System.Nullable<int> ClienteID
		{
			get
			{
				return this._ClienteID;
			}
			set
			{
				if ((this._ClienteID != value))
				{
					if (this._Clientes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteIDChanging(value);
					this.SendPropertyChanging();
					this._ClienteID = value;
					this.SendPropertyChanged("ClienteID");
					this.OnClienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", DbType="Int")]
		public System.Nullable<int> UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					if (this._Usuarios.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime NOT NULL")]
		public System.DateTime Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtotal", DbType="Decimal(18,2) NOT NULL")]
		public decimal Subtotal
		{
			get
			{
				return this._Subtotal;
			}
			set
			{
				if ((this._Subtotal != value))
				{
					this.OnSubtotalChanging(value);
					this.SendPropertyChanging();
					this._Subtotal = value;
					this.SendPropertyChanged("Subtotal");
					this.OnSubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IVA", DbType="Decimal(18,2) NOT NULL")]
		public decimal IVA
		{
			get
			{
				return this._IVA;
			}
			set
			{
				if ((this._IVA != value))
				{
					this.OnIVAChanging(value);
					this.SendPropertyChanging();
					this._IVA = value;
					this.SendPropertyChanged("IVA");
					this.OnIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalConIVA", DbType="Decimal(18,2) NOT NULL")]
		public decimal TotalConIVA
		{
			get
			{
				return this._TotalConIVA;
			}
			set
			{
				if ((this._TotalConIVA != value))
				{
					this.OnTotalConIVAChanging(value);
					this.SendPropertyChanging();
					this._TotalConIVA = value;
					this.SendPropertyChanged("TotalConIVA");
					this.OnTotalConIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Facturas_DetalleFactura", Storage="_DetalleFactura", ThisKey="FacturaID", OtherKey="FacturaID")]
		public EntitySet<DetalleFactura> DetalleFactura
		{
			get
			{
				return this._DetalleFactura;
			}
			set
			{
				this._DetalleFactura.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Facturas", Storage="_Usuarios", ThisKey="UsuarioID", OtherKey="UsuarioID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Usuarios Usuarios
		{
			get
			{
				return this._Usuarios.Entity;
			}
			set
			{
				Usuarios previousValue = this._Usuarios.Entity;
				if (((previousValue != value) 
							|| (this._Usuarios.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Usuarios.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Usuarios.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._UsuarioID = value.UsuarioID;
					}
					else
					{
						this._UsuarioID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Usuarios");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Facturas", Storage="_Clientes", ThisKey="ClienteID", OtherKey="ClienteID", IsForeignKey=true, DeleteRule="CASCADE")]
		public Clientes Clientes
		{
			get
			{
				return this._Clientes.Entity;
			}
			set
			{
				Clientes previousValue = this._Clientes.Entity;
				if (((previousValue != value) 
							|| (this._Clientes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Clientes.Entity = null;
						previousValue.Facturas.Remove(this);
					}
					this._Clientes.Entity = value;
					if ((value != null))
					{
						value.Facturas.Add(this);
						this._ClienteID = value.ClienteID;
					}
					else
					{
						this._ClienteID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Clientes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleFactura(DetalleFactura entity)
		{
			this.SendPropertyChanging();
			entity.Facturas = this;
		}
		
		private void detach_DetalleFactura(DetalleFactura entity)
		{
			this.SendPropertyChanging();
			entity.Facturas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Productos")]
	public partial class Productos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ProductoID;
		
		private string _Nombre;
		
		private string _Descripcion;
		
		private decimal _Precio;
		
		private int _Stock;
		
		private string _Imagen;
		
		private EntitySet<DetalleFactura> _DetalleFactura;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductoIDChanging(int value);
    partial void OnProductoIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnPrecioChanging(decimal value);
    partial void OnPrecioChanged();
    partial void OnStockChanging(int value);
    partial void OnStockChanged();
    partial void OnImagenChanging(string value);
    partial void OnImagenChanged();
    #endregion
		
		public Productos()
		{
			this._DetalleFactura = new EntitySet<DetalleFactura>(new Action<DetalleFactura>(this.attach_DetalleFactura), new Action<DetalleFactura>(this.detach_DetalleFactura));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ProductoID
		{
			get
			{
				return this._ProductoID;
			}
			set
			{
				if ((this._ProductoID != value))
				{
					this.OnProductoIDChanging(value);
					this.SendPropertyChanging();
					this._ProductoID = value;
					this.SendPropertyChanged("ProductoID");
					this.OnProductoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NVarChar(255)")]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Precio", DbType="Decimal(18,2) NOT NULL")]
		public decimal Precio
		{
			get
			{
				return this._Precio;
			}
			set
			{
				if ((this._Precio != value))
				{
					this.OnPrecioChanging(value);
					this.SendPropertyChanging();
					this._Precio = value;
					this.SendPropertyChanged("Precio");
					this.OnPrecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="Int NOT NULL")]
		public int Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this.OnStockChanging(value);
					this.SendPropertyChanging();
					this._Stock = value;
					this.SendPropertyChanged("Stock");
					this.OnStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imagen", DbType="NVarChar(MAX)")]
		public string Imagen
		{
			get
			{
				return this._Imagen;
			}
			set
			{
				if ((this._Imagen != value))
				{
					this.OnImagenChanging(value);
					this.SendPropertyChanging();
					this._Imagen = value;
					this.SendPropertyChanged("Imagen");
					this.OnImagenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Productos_DetalleFactura", Storage="_DetalleFactura", ThisKey="ProductoID", OtherKey="ProductoID")]
		public EntitySet<DetalleFactura> DetalleFactura
		{
			get
			{
				return this._DetalleFactura;
			}
			set
			{
				this._DetalleFactura.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DetalleFactura(DetalleFactura entity)
		{
			this.SendPropertyChanging();
			entity.Productos = this;
		}
		
		private void detach_DetalleFactura(DetalleFactura entity)
		{
			this.SendPropertyChanging();
			entity.Productos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Usuarios")]
	public partial class Usuarios : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UsuarioID;
		
		private string _NombreUsuario;
		
		private string _Contraseña;
		
		private string _Nombre;
		
		private string _Apellido;
		
		private string _Email;
		
		private string _Rol;
		
		private EntitySet<Facturas> _Facturas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsuarioIDChanging(int value);
    partial void OnUsuarioIDChanged();
    partial void OnNombreUsuarioChanging(string value);
    partial void OnNombreUsuarioChanged();
    partial void OnContraseñaChanging(string value);
    partial void OnContraseñaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRolChanging(string value);
    partial void OnRolChanged();
    #endregion
		
		public Usuarios()
		{
			this._Facturas = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas), new Action<Facturas>(this.detach_Facturas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreUsuario", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NombreUsuario
		{
			get
			{
				return this._NombreUsuario;
			}
			set
			{
				if ((this._NombreUsuario != value))
				{
					this.OnNombreUsuarioChanging(value);
					this.SendPropertyChanging();
					this._NombreUsuario = value;
					this.SendPropertyChanged("NombreUsuario");
					this.OnNombreUsuarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contraseña", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Contraseña
		{
			get
			{
				return this._Contraseña;
			}
			set
			{
				if ((this._Contraseña != value))
				{
					this.OnContraseñaChanging(value);
					this.SendPropertyChanging();
					this._Contraseña = value;
					this.SendPropertyChanged("Contraseña");
					this.OnContraseñaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(100)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="NVarChar(20)")]
		public string Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Usuarios_Facturas", Storage="_Facturas", ThisKey="UsuarioID", OtherKey="UsuarioID")]
		public EntitySet<Facturas> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = this;
		}
		
		private void detach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.Usuarios = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Clientes")]
	public partial class Clientes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ClienteID;
		
		private string _Nombre;
		
		private string _Cedula;
		
		private string _Direccion;
		
		private string _Telefono;
		
		private string _Email;
		
		private System.Nullable<int> _UsuarioID;
		
		private string _Estado;
		
		private string _Apellido;
		
		private EntitySet<Facturas> _Facturas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClienteIDChanging(int value);
    partial void OnClienteIDChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCedulaChanging(string value);
    partial void OnCedulaChanged();
    partial void OnDireccionChanging(string value);
    partial void OnDireccionChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnUsuarioIDChanging(System.Nullable<int> value);
    partial void OnUsuarioIDChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnApellidoChanging(string value);
    partial void OnApellidoChanged();
    #endregion
		
		public Clientes()
		{
			this._Facturas = new EntitySet<Facturas>(new Action<Facturas>(this.attach_Facturas), new Action<Facturas>(this.detach_Facturas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClienteID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ClienteID
		{
			get
			{
				return this._ClienteID;
			}
			set
			{
				if ((this._ClienteID != value))
				{
					this.OnClienteIDChanging(value);
					this.SendPropertyChanging();
					this._ClienteID = value;
					this.SendPropertyChanged("ClienteID");
					this.OnClienteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cedula", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Cedula
		{
			get
			{
				return this._Cedula;
			}
			set
			{
				if ((this._Cedula != value))
				{
					this.OnCedulaChanging(value);
					this.SendPropertyChanging();
					this._Cedula = value;
					this.SendPropertyChanged("Cedula");
					this.OnCedulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Direccion", DbType="NVarChar(255)")]
		public string Direccion
		{
			get
			{
				return this._Direccion;
			}
			set
			{
				if ((this._Direccion != value))
				{
					this.OnDireccionChanging(value);
					this.SendPropertyChanging();
					this._Direccion = value;
					this.SendPropertyChanged("Direccion");
					this.OnDireccionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(20)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsuarioID", DbType="Int")]
		public System.Nullable<int> UsuarioID
		{
			get
			{
				return this._UsuarioID;
			}
			set
			{
				if ((this._UsuarioID != value))
				{
					this.OnUsuarioIDChanging(value);
					this.SendPropertyChanging();
					this._UsuarioID = value;
					this.SendPropertyChanged("UsuarioID");
					this.OnUsuarioIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="VarChar(20)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellido", DbType="NVarChar(100)")]
		public string Apellido
		{
			get
			{
				return this._Apellido;
			}
			set
			{
				if ((this._Apellido != value))
				{
					this.OnApellidoChanging(value);
					this.SendPropertyChanging();
					this._Apellido = value;
					this.SendPropertyChanged("Apellido");
					this.OnApellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Clientes_Facturas", Storage="_Facturas", ThisKey="ClienteID", OtherKey="ClienteID")]
		public EntitySet<Facturas> Facturas
		{
			get
			{
				return this._Facturas;
			}
			set
			{
				this._Facturas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = this;
		}
		
		private void detach_Facturas(Facturas entity)
		{
			this.SendPropertyChanging();
			entity.Clientes = null;
		}
	}
}
#pragma warning restore 1591
